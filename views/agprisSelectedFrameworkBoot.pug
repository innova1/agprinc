extends ../node_modules/jade-bootstrap/_bootstrap

block append styles
  style.
    .my-space-grid { 
      margin-bottom: 15px;
    }
    .my-show-grid-ptitle {
      border: 1px solid darkgreen;
    }
    .my-show-grid-ptext {
      border-left: 1px solid darkgreen;
      border-right: 1px solid darkgreen;
      border-bottom: 1px solid darkgreen;
    }
    .ag-title-bgcolor {
      background-color: darkseagreen;
    }
    .ag-text-bgcolor {
      background-color: white;
    }
    .value>.panel-heading { /*value heading color*/
      color: #333;
      background-color: #aaddf7;
     }
    .principle>.panel-heading { /*principle heading color*/
      color: #333;
      background-color: #99e7cc;
     }
     .searchform {
       margin-left  : 20px;
       margin-top: 10px;
       border: 1px solid red;
     }
     .center {
       text-align: center;
     }
     .selected {
       font-weight: bold;
       font-size: 1.2em;
     }
     a.plain {
       text-decoration: none;
       color: black;
     }
     div#suggestions {
       display: none;
       border: 2px inset black;
       width: 300px;
       padding: 10px 10px 10px 10px;
     }
     .inline {
       display: inline;
     }
     .activekeywords {
       margin-left: 15px;
     }
     #currentSearchterms {
       display: block; /*change this to block in test*/
     }
     
block append scripts
  script.
    var isSmallViewport = window.matchMedia("(max-width: 1000px)");
    isSmallViewport.addListener(setMenuCollapsed);
    
    function setMenuCollapsed(isSmallViewport) {
      if( isSmallViewport.matches ) {
        document.getElementById("sidepanel").classList.remove('show');
        document.getElementById("sidepanel").classList.remove('in');
      } else {
        document.getElementById("sidepanel").classList.add('show');
      }
    }
    setMenuCollapsed(isSmallViewport);
    
    function setSelected(selectedFramework) {
      if(selectedFramework) {
        document.getElementById(selectedFramework).classList.add('selected');
      }
      //console.log("added .selected to " + selectedFramework)
    }
    
    var selF = document.getElementById('currentFramework').innerHTML
    setSelected(selF);
    
    var searchRequest = null;
    var suggElement = document.getElementById('suggestions');
    
    $(function() {
      var minlength = 3;
      
      $("#searchterms").keyup(function() {
        var oldThis = this,
        value = $(this).val();
        console.log("value is " + value);
        
         if (value.length >= minlength ) {
            if (searchRequest != null) 
                searchRequest.abort();
            searchRequest = $.ajax({
                type: "GET",
                url: "/api/agileframeworks/keywords?",
                data: {
                    'keyword' : value
                },
                dataType: "json",
                success: function(msg){
                    if(msg.result[0]) {
                      var resultList = '<ul style="list-style-type: none"><li><b>Suggestions</b></li>';
                      var curSearchField = document.getElementById('currentSearchterms');
                      var curSearchTerms = (curSearchField?curSearchField.innerHTML + ",":"");
                      console.log("in success 1 with " + msg.result[0] );
                      //we need to check if the value is the same
                      if (value==$(oldThis).val()) {
                        console.log("in success 2 in if with " + msg.result[0] );
                        msg.result.forEach( element => {
                          resultList = resultList + '<li><a href="/agileframeworks/search?searchterms=' + curSearchTerms + element + '"/>' + element + '</a></li>';
                        });
                        resultList = resultList + '</ul>';
                        suggElement.innerHTML = resultList;
                        suggElement.style.display = 'block';
                      }
                    }
                }
            });
        } else {
          suggElement.innerHTML = '';
          suggElement.style.display = 'none';
        }
      });
    });
    
    function removeActiveSearchterm(term) {
      console.log("removing " + term);
      var curSearchField = document.getElementById('currentSearchterms');
      var curTerms = curSearchField.innerHTML;
      console.log("curTerms: " + curTerms);
      var countarray = curTerms.split(',');
      var count = countarray.length-1;
      var subCurTerms = '';
      var result = '';
      /*
        do a search on a string and get index
        get substring from 0 to searchreturnedindex-1 ( if not 0 to remove the comma) then, if searchreturnedindex + term.length to full string length and concatenate
      */
      var matchIndex = curTerms.search( term );
      console.log("index is " + matchIndex);
      if(matchIndex>-1) { //value found
        if(matchIndex==0) { //found at first position
          if(term == curTerms.length ) { //this is the only term in current searchterms
            result = ''; //remove the whole thing
          } else { //word is the first of the string but there's more
            result = curTerms.substring(term.length+1,curTerms.length)
          }
        } else {  //it's a word in the middle of the string or at the end
          if( matchIndex+term.length==curTerms.length ) {  //if term is the last word of string
            console.log("term is last word of string");
            result = curTerms.substring(0,matchIndex-1);
          } else { //word in the middle of the string
            console.log("term is in the middle of string");
            var s1 = curTerms.substring(0,matchIndex-1);
            var s2 = curTerms.substring(matchIndex+term.length,curTerms.length)
            result = s1 + s2;
          }
        }
      }
      /*
      if(!curTerms) { curTerms = '' }
      console.log("terms is " + terms);
      curTerms = curTerms + terms;
      console.log("curTerms is " + curTerms);
      */
      console.log("result: " + result + " with count: " + count);
      var href = "/agileframeworks/";
      if(count==0) {
        href = href + "all";
        curSearchField.innerHTML = "";
      } else {
        href = href + "search?searchterms=" + result;
        curSearchField.innerHTML = result;
      }
      //window.location.href = href;
    }
    

block body
  nav.navbar.navbar-default
    div.container-fluid
      div.navbar-header
        a.navbar-brand(href='/agileframeworks/all')
          | Agile Values and Principles
        form.navbar-form.navbar-left(action='/agileframeworks/search', method='GET')
          div.form-group
            input.form-control#searchterms(type='text', name='searchterms', placeholder='Search Terms', autocomplete="off")  
            //input.btn.btn-default(type='submit', value='Submit')
            div#suggestions
        div.inline
          - var terms = ""
          if searchtermsArray
            each term in searchtermsArray
              a.activekeywords.plain(href="javascript:void(0)" onclick="javascript:removeActiveSearchterm('" + term + "')") <span class="glyphicon glyphicon-remove-circle"></span>
                | &nbsp;#{term}
              - terms = terms + ',' + term;
            div#currentSearchterms #{terms.substring(1,terms.length)}
  div.container
    div.row
      div.col-md-2
          div.panel.panel-default
            div.panel-heading
              a.plain(href='#sidepanel' data-toggle='collapse')
                h3.panel-title Frameworks
                  //a(href='/agileframeworks/all' data-toggle='collapse') Frameworks
            div.panel-collapse.collapse.show#sidepanel
              ul.list-group
                each f in frameworks
                  li.list-group-item 
                    a.menu(href='/agileframeworks/' + f.framework ) <span id=#{f.framework}>#{f.frameworkdisplay}</span>
      div.col-md-8
        p#currentFramework.hide #{framework}
        each pv in principlesArray
          div.panel.panel-primary(class=pv.type)
            div.panel-heading
              h3.panel-title #{pv.frameworkdisplay} #{pv.type} #{pv.id}
            div.panel-body
              | #{pv.text}
      div.col-md-2
          div.panel.panel-default
            div.panel-heading
              h3.panel-title About
            div.panel-body
              p.center Designed and coded by <a class='plain' href="https://www.linkedin.com/in/tomboulet/">Tom Boulet</a>
              p.hide API at /api
